{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,mCACA,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAMlB,SACI,uBACIO,KAAO,OACPC,MAAST,EACTU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,e,sCCRlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIpC,OAFAc,QAAQC,IAAIN,EAAIC,EAAOV,GAGnB,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAOjB,EAAKkB,IAAOR,IACxB,4BAAIA,QCLHS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAErB,ECCwB,SAACA,GAEzB,MAA2Bd,mBAAS,CAChCqB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAhBAC,qBAAW,WAEP1B,EAAQC,GACH0B,MAAK,SAAAC,GAEFX,QAAQC,IAAIU,GACZH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAKvB,CAACtB,IAGIuB,EDzBwBK,CAAa5B,GAAhCa,EAAZ,EAAON,KAAae,EAApB,EAAoBA,QAEnB,OACG,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDlB,IAElDsB,GAAW,2CAEX,qBAAKJ,UAAU,YAAf,SAGOL,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADGA,EAAIC,aEbtBkB,EAAe,WAEtB,MAAoC3C,mBAAS,CAAC,aAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAWF,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAEA,6BAEQ6C,EAAWrB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAYA,GADLA,Y,MCvBnC+B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.96426706.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue,...cats]);\r\n            setInputValue(''); \r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type = \"text\"\r\n                value = {inputValue}\r\n                onChange = {handleInputChange}\r\n            />\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\n// Regla requerida\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Aang43qvYRFKzEcc7LcF2ukNvRyPhTKA`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    console.log(id, title, url);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src = {url} alt = {title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n     return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n        {loading && <p>Loading...</p>}\r\n       \r\n        {<div className=\"card-grid\">\r\n            \r\n            {\r\n                images.map( img => (\r\n                    <GifGridItem\r\n                        key = {img.id} \r\n                        {...img}\r\n                    />\r\n                ))\r\n            }\r\n        </div>}\r\n        </>\r\n    )\r\n}\r\n","// Los archivos que empiezan con 'use' es porque es un hook. \r\n// Un hook es una función\r\n\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react/cjs/react.development\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] =  useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    // Petición HTTP    \r\n    useEffect( () =>{\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                console.log(imgs)\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n\r\n            })\r\n\r\n    },[category])\r\n\r\n    \r\n    return state;\r\n    \r\n}\r\n","// rafc TAB -> Estructura\r\n\r\nimport React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n      const [categories, setCategories] = useState(['Carl cox']);\r\n\r\n    // Funcion agregar\r\n    // const handleAdd = () =>{\r\n    //     // Operador spread ...\r\n    //     setCategories([...categories, 'Joseph Capriati']);\r\n\r\n    //     // Otra opción\r\n    //     //setCategories(cats => [...cats, 'Joseph Capriati']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = {setCategories}/>\r\n            <hr></hr>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid\r\n                            key = {category}\r\n                            category = {category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n\n    <GifExpertApp/>,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}